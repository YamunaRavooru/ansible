- name: create ec2 and r53 records
  connection: local
  hosts: local
  vars:
    sg_id: sg-02c4f2095c06e53db
    instance_type: t3.micro
    ami_id: ami-09c813fb71547fc4f
    subnet_id: subnet-0c680a8b4b29f54ed
    zone: daws82s.cloud
    instance:
    - mysql
    - backend
    - frontent
  tasks:
  - name: aws python libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - boto3
    - botocore    
  - name: create ec2-instance
    amazon.aws.ec2_instance:
      name: "{{ item }}"
      subnet_id: "{{ subnet_id }}" 
      image_id: "{{ ami_id }}"
      security_group: "{{ sg_id }}"
      instance_type: "{{ instance_type }}"
    loop: "{{ instance }}"
    register: ec2_info
  # - name: print ec2_info
  #   ansible.builtin.debug:
  #     msg: "{{ ec2_info }}"
  - name: print private ip addresses
    ansible.builtin.debug:
     msg: "{{ item.instances[0].private_ip_address }}"
    loop: "{{ ec2_info.results}}"
  
  - name: create private ip r53 record
    amazon.aws.route53:
      state: present
      zone: "{{zone}}"
      record: "{{item.item}}.{{zone}}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].private_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results}}"
  - name: create public ip for frontend
    amazon.aws.route53:
      state: present
      zone: "{{zone}}"
      record: "{{zone}}"
      type: A
      ttl: 1
      value: "{{ item.instances[0].public_ip_address }}"
      wait: true
      overwrite: true
    loop: "{{ ec2_info.results}}"  
    when: item.item == "frontend"